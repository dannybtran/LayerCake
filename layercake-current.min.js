(function(){var a=false,b=/xyz/.test(function(){xyz})?/\b_super\b/:/.*/;this.Class=function(){};Class.extend=function(g){var f=this.prototype;a=true;var e=new this();a=false;for(var d in g){e[d]=typeof g[d]=="function"&&typeof f[d]=="function"&&b.test(g[d])?(function(h,i){return function(){var k=this._super;this._super=f[h];var j=i.apply(this,arguments);this._super=k;return j}})(d,g[d]):g[d]}function c(){if(!a&&this.init){this.init.apply(this,arguments)}}c.prototype=e;c.constructor=c;c.extend=arguments.callee;return c}})();var LayerCake={get_root:function(a){if(!this.root){this.root=new RootView(a)}return this.root},next_view_id:0};var Point=Class.extend({init:function(a,b){this.x=a;this.y=b},equals:function(a){if(this.x==a.x&&this.y==a.y){return true}return false}});var View=Class.extend({init:function(a,b){this.id=LayerCake.next_view_id++;this.origin=new Point(a,b);this.bounds={width:0,height:0};this.canvas=null;this.ctx=null;this.rootview=null;this.superview=null;this.subviews=[];this.visible=true;this.clickable=false;this.draggable=false;this.isDragging=false;this.isMouseDown=false;this.isRoot=false;this._dragOrigin;this._dragPoint;this._mouseDownOrigin;this._mousedOver=false;this._mousedOut=true},_relate:function(a,c){a.rootview=(c.isRoot==true)?c:c.rootview;a.superview=c;a.canvas=c.canvas;a.ctx=c.ctx;for(var b in a.subviews){a.subviews[b]._relate(a.subviews[b],a)}return a},_draw:function(){this.draw();for(var a in this.subviews){if(this.subviews[a].visible){this.subviews[a]._draw()}}},_click:function(b){for(var a=this.subviews.length-1;a>=0;a--){if(this.subviews[a]._click(b)){return true}}if(this.pointInView(new Point(b.clientX,b.clientY))){if(this.clickable&&this._mouseDownOrigin.equals(this.convertPointToWindow(this.origin))){this._mouseDownOrigin=null;this.click(b)}return true}else{return false}},_mousedown:function(b){for(var a=this.subviews.length-1;a>=0;a--){if(this.subviews[a]._mousedown(b)){return true}}if(this.pointInView(new Point(b.clientX,b.clientY))){this._mouseDownOrigin=this.convertPointToWindow(this.origin);this.mousedown(b);if(this.draggable&&!this.isDragging){this._startDrag(b);return true}else{return false}}else{return false}},_mouseup:function(b){for(var a in this.subviews){if(this.subviews[a]._mouseup(b)){return false}}this.mouseup(b);if(this.isDragging){this._stopDrag(b)}return false},_mousemove:function(b){if(this.isDragging){var c=new Point(b.clientX-this._dragPoint.x,b.clientY-this._dragPoint.y);this.origin=new Point(this._dragOrigin.x+c.x,this._dragOrigin.y+c.y);this.rootview.draw();return true}for(var a in this.subviews){if(this.subviews[a]._mousemove(b)){return false}}if(this.pointInView(new Point(b.clientX,b.clientY))){this.mousemove(b);if(!this._mousedOver){this._mousedOver=true;this._mousedOut=false;this._mouseover(b)}}else{if(!this._mousedOut){this._mousedOver=false;this._mousedOut=true;this._mouseout(b)}}return false},_mouseover:function(a){this.mouseover(a)},_mouseout:function(a){this.mouseout(a)},_startDrag:function(a){this._dragOrigin=this.origin;this._dragPoint=new Point(a.clientX,a.clientY);this.isDragging=true},_stopDrag:function(a){this.isDragging=false},addSubview:function(a){if(!(a instanceof View)){throw ("Parameter must be of or extend class View")}a=this._relate(a,this);this.subviews.push(a)},draw:function(){},click:function(a){},mousedown:function(a){},mouseup:function(a){},mousemove:function(a){},mouseover:function(a){},mouseout:function(a){},pointInView:function(a){return false},convertPointToView:function(e,c){var d=this;var b=e.x,a=e.y;while(d.superview&&c!=d){d=d.superview;b+=d.origin.x;a+=d.origin.y}return new Point(b,a)},convertPointToWindow:function(b){var a=this.convertPointToView(b,this.rootview);return new Point(a.x+this.canvas.offsetLeft,a.y+this.canvas.offsetTop)}});var RootView=View.extend({init:function(a){this._super(0,0);this.canvas=a;this.ctx=a.getContext("2d");this.isRoot=true;this.canvas.addEventListener("click",this.click,true);this.canvas.addEventListener("mousedown",this.mousedown,true);this.canvas.addEventListener("mouseup",this.mouseup,true);this.canvas.addEventListener("mousemove",this.mousemove,true)},_draw:function(){for(var a in this.subviews){if(this.subviews[a].visible){this.subviews[a]._draw()}}},draw:function(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);this._draw()},click:function(c){var a=LayerCake.get_root();for(var b=a.subviews.length-1;b>=0;b--){if(a.subviews[b]._click(c)){return}}},mousedown:function(c){var a=LayerCake.get_root();for(var b=a.subviews.length-1;b>=0;b--){if(a.subviews[b]._mousedown(c)){return}}},mouseup:function(c){var a=LayerCake.get_root();for(var b in a.subviews){if(a.subviews[b]._mouseup(c)){return}}},mousemove:function(c){var a=LayerCake.get_root();for(var b in a.subviews){if(a.subviews[b]._mousemove(c)){return}}}});var RectView=View.extend({init:function(b,d,c,a){this._super(b,d);this.bounds={width:c,height:a};this.fillStyle="#000"},draw:function(){this.ctx.fillStyle=this.fillStyle;var a=this.convertPointToView(this.origin,this.rootview);this.ctx.fillRect(a.x,a.y,this.bounds.width,this.bounds.height)},pointInView:function(b){var a=this.convertPointToWindow(this.origin);if(b.x>=a.x&&b.x<=a.x+this.bounds.width&&b.y>=a.y&&b.y<=a.y+this.bounds.height){return true}},click:function(a){}});var ImageView=View.extend({init:function(d,b,e,c,a){this._super(b,e);this.src=d;this.image=new Image();this.bounds={width:c,height:a};this.fillStyle="#000"},draw:function(){if(this.image.src!=this.src){this.image.src=this.src;this.src=this.image.src;this.image.onload=(function(a){return function(){a._draw()}})(this)}else{this.drawImage()}},drawImage:function(){var a=this.convertPointToView(this.origin,this.rootview);this.ctx.drawImage(this.image,a.x,a.y,this.bounds.width,this.bounds.height)},pointInView:function(b){var a=this.convertPointToWindow(this.origin);if(b.x>=a.x&&b.x<=a.x+this.bounds.width&&b.y>=a.y&&b.y<=a.y+this.bounds.height){return true}},click:function(a){}});